diff --git gtk+2.0-2.24.31.orig/gtk/Makefile.am gtk+2.0-2.24.31/gtk/Makefile.am
index 8cc4536..c84162a 100644
--- gtk+2.0-2.24.31.orig/gtk/Makefile.am
+++ gtk+2.0-2.24.31/gtk/Makefile.am
@@ -420,6 +420,7 @@ gtk_private_h_sources =		\
 
 # GTK+ C sources to build the library from
 gtk_base_c_sources =            \
+	ddefiledialog.c		\
 	gtkquery.c		\
 	gtksearchengine.c	\
 	gtksearchenginesimple.c	\
diff --git gtk+2.0-2.24.31.orig/gtk/gtkfilechooser.h gtk+2.0-2.24.31/gtk/gtkfilechooser.h
index aa27be4..832635c 100644
--- gtk+2.0-2.24.31.orig/gtk/gtkfilechooser.h
+++ gtk+2.0-2.24.31/gtk/gtkfilechooser.h
@@ -117,29 +117,42 @@ GQuark gtk_file_chooser_error_quark (void);
 
 /* Configuration
  */
+__attribute__((weak))
 void                 gtk_file_chooser_set_action          (GtkFileChooser       *chooser,
 							   GtkFileChooserAction  action);
+__attribute__((weak))		   
 GtkFileChooserAction gtk_file_chooser_get_action          (GtkFileChooser       *chooser);
+__attribute__((weak))
 void                 gtk_file_chooser_set_local_only      (GtkFileChooser       *chooser,
 							   gboolean              local_only);
+__attribute__((weak))
 gboolean             gtk_file_chooser_get_local_only      (GtkFileChooser       *chooser);
+__attribute__((weak))
 void                 gtk_file_chooser_set_select_multiple (GtkFileChooser       *chooser,
 							   gboolean              select_multiple);
+__attribute__((weak))
 gboolean             gtk_file_chooser_get_select_multiple (GtkFileChooser       *chooser);
+__attribute__((weak))
 void                 gtk_file_chooser_set_show_hidden     (GtkFileChooser       *chooser,
 							   gboolean              show_hidden);
+__attribute__((weak))
 gboolean             gtk_file_chooser_get_show_hidden     (GtkFileChooser       *chooser);
 
+__attribute__((weak))
 void                 gtk_file_chooser_set_do_overwrite_confirmation (GtkFileChooser *chooser,
 								     gboolean        do_overwrite_confirmation);
+__attribute__((weak))
 gboolean             gtk_file_chooser_get_do_overwrite_confirmation (GtkFileChooser *chooser);
 
+__attribute__((weak))
 void                 gtk_file_chooser_set_create_folders  (GtkFileChooser       *chooser,
 							  gboolean               create_folders);
+__attribute__((weak))
 gboolean             gtk_file_chooser_get_create_folders (GtkFileChooser *chooser);
 
 /* Suggested name for the Save-type actions
  */
+__attribute__((weak))
 void     gtk_file_chooser_set_current_name   (GtkFileChooser *chooser,
 					      const gchar    *name);
 
@@ -160,103 +173,148 @@ void     gtk_file_chooser_set_current_name   (GtkFileChooser *chooser,
 #define gtk_file_chooser_list_shortcut_folders gtk_file_chooser_list_shortcut_folders_utf8
 #endif
 
+__attribute__((weak))
 gchar *  gtk_file_chooser_get_filename       (GtkFileChooser *chooser);
+__attribute__((weak))
 gboolean gtk_file_chooser_set_filename       (GtkFileChooser *chooser,
 					      const char     *filename);
+__attribute__((weak))
 gboolean gtk_file_chooser_select_filename    (GtkFileChooser *chooser,
 					      const char     *filename);
+__attribute__((weak))
 void     gtk_file_chooser_unselect_filename  (GtkFileChooser *chooser,
 					      const char     *filename);
+__attribute__((weak))
 void     gtk_file_chooser_select_all         (GtkFileChooser *chooser);
+__attribute__((weak))
 void     gtk_file_chooser_unselect_all       (GtkFileChooser *chooser);
+__attribute__((weak))
 GSList * gtk_file_chooser_get_filenames      (GtkFileChooser *chooser);
+__attribute__((weak))
 gboolean gtk_file_chooser_set_current_folder (GtkFileChooser *chooser,
 					      const gchar    *filename);
+__attribute__((weak))
 gchar *  gtk_file_chooser_get_current_folder (GtkFileChooser *chooser);
 
 
 /* URI manipulation
  */
+__attribute__((weak))
 gchar *  gtk_file_chooser_get_uri                (GtkFileChooser *chooser);
+__attribute__((weak))
 gboolean gtk_file_chooser_set_uri                (GtkFileChooser *chooser,
 						  const char     *uri);
+__attribute__((weak))
 gboolean gtk_file_chooser_select_uri             (GtkFileChooser *chooser,
 						  const char     *uri);
+__attribute__((weak))
 void     gtk_file_chooser_unselect_uri           (GtkFileChooser *chooser,
 						  const char     *uri);
+__attribute__((weak))
 GSList * gtk_file_chooser_get_uris               (GtkFileChooser *chooser);
+__attribute__((weak))
 gboolean gtk_file_chooser_set_current_folder_uri (GtkFileChooser *chooser,
 						  const gchar    *uri);
+__attribute__((weak))
 gchar *  gtk_file_chooser_get_current_folder_uri (GtkFileChooser *chooser);
 
 /* GFile manipulation */
+__attribute__((weak))
 GFile *  gtk_file_chooser_get_file                (GtkFileChooser  *chooser);
+__attribute__((weak))
 gboolean gtk_file_chooser_set_file                (GtkFileChooser  *chooser,
                                                    GFile           *file,
                                                    GError         **error);
+__attribute__((weak))
 gboolean gtk_file_chooser_select_file             (GtkFileChooser  *chooser,
                                                    GFile           *file,
                                                    GError         **error);
+__attribute__((weak))
 void     gtk_file_chooser_unselect_file           (GtkFileChooser  *chooser,
                                                    GFile           *file);
+__attribute__((weak))
 GSList * gtk_file_chooser_get_files               (GtkFileChooser  *chooser);
+__attribute__((weak))
 gboolean gtk_file_chooser_set_current_folder_file (GtkFileChooser  *chooser,
                                                    GFile           *file,
                                                    GError         **error);
+__attribute__((weak))
 GFile *  gtk_file_chooser_get_current_folder_file (GtkFileChooser  *chooser);
 
 /* Preview widget
  */
+__attribute__((weak))
 void       gtk_file_chooser_set_preview_widget        (GtkFileChooser *chooser,
 						       GtkWidget      *preview_widget);
+__attribute__((weak))
 GtkWidget *gtk_file_chooser_get_preview_widget        (GtkFileChooser *chooser);
+__attribute__((weak))
 void       gtk_file_chooser_set_preview_widget_active (GtkFileChooser *chooser,
 						       gboolean        active);
+__attribute__((weak))
 gboolean   gtk_file_chooser_get_preview_widget_active (GtkFileChooser *chooser);
+__attribute__((weak))
 void       gtk_file_chooser_set_use_preview_label     (GtkFileChooser *chooser,
 						       gboolean        use_label);
+__attribute__((weak))
 gboolean   gtk_file_chooser_get_use_preview_label     (GtkFileChooser *chooser);
 
+__attribute__((weak))
 char  *gtk_file_chooser_get_preview_filename (GtkFileChooser *chooser);
+__attribute__((weak))
 char  *gtk_file_chooser_get_preview_uri      (GtkFileChooser *chooser);
+__attribute__((weak))
 GFile *gtk_file_chooser_get_preview_file     (GtkFileChooser *chooser);
 
 /* Extra widget
  */
+__attribute__((weak))
 void       gtk_file_chooser_set_extra_widget (GtkFileChooser *chooser,
 					      GtkWidget      *extra_widget);
+__attribute__((weak))
 GtkWidget *gtk_file_chooser_get_extra_widget (GtkFileChooser *chooser);
 
 /* List of user selectable filters
  */
+__attribute__((weak))
 void    gtk_file_chooser_add_filter    (GtkFileChooser *chooser,
 					GtkFileFilter  *filter);
+__attribute__((weak))
 void    gtk_file_chooser_remove_filter (GtkFileChooser *chooser,
 					GtkFileFilter  *filter);
+__attribute__((weak))
 GSList *gtk_file_chooser_list_filters  (GtkFileChooser *chooser);
 
 /* Current filter
  */
+__attribute__((weak))
 void           gtk_file_chooser_set_filter (GtkFileChooser *chooser,
 					   GtkFileFilter  *filter);
+__attribute__((weak))
 GtkFileFilter *gtk_file_chooser_get_filter (GtkFileChooser *chooser);
 
 /* Per-application shortcut folders */
 
+__attribute__((weak))
 gboolean gtk_file_chooser_add_shortcut_folder    (GtkFileChooser *chooser,
 						  const char     *folder,
 						  GError        **error);
+__attribute__((weak))
 gboolean gtk_file_chooser_remove_shortcut_folder (GtkFileChooser *chooser,
 						  const char     *folder,
 						  GError        **error);
+__attribute__((weak))
 GSList *gtk_file_chooser_list_shortcut_folders   (GtkFileChooser *chooser);
 
+__attribute__((weak))
 gboolean gtk_file_chooser_add_shortcut_folder_uri    (GtkFileChooser *chooser,
 						      const char     *uri,
 						      GError        **error);
+__attribute__((weak))
 gboolean gtk_file_chooser_remove_shortcut_folder_uri (GtkFileChooser *chooser,
 						      const char     *uri,
 						      GError        **error);
+__attribute__((weak))
 GSList *gtk_file_chooser_list_shortcut_folder_uris   (GtkFileChooser *chooser);
 
 G_END_DECLS
diff --git gtk+2.0-2.24.31.orig/gtk/gtkfilechooserdialog.h gtk+2.0-2.24.31/gtk/gtkfilechooserdialog.h
index 78c02d2..e83ef0c 100644
--- gtk+2.0-2.24.31.orig/gtk/gtkfilechooserdialog.h
+++ gtk+2.0-2.24.31/gtk/gtkfilechooserdialog.h
@@ -54,6 +54,7 @@ struct _GtkFileChooserDialogClass
 };
 
 GType      gtk_file_chooser_dialog_get_type         (void) G_GNUC_CONST;
+__attribute__((weak))
 GtkWidget *gtk_file_chooser_dialog_new              (const gchar          *title,
 						     GtkWindow            *parent,
 						     GtkFileChooserAction  action,
