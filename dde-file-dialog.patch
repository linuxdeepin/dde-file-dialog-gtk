Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 gtk+3.0 (3.22.17-1) unstable; urgency=medium
 .
   * New upstream release.
Author: Emilio Pozuelo Monfort <pochu@debian.org>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2017-12-08

--- gtk+3.0-3.22.17.orig/gtk/Makefile.am
+++ gtk+3.0-3.22.17/gtk/Makefile.am
@@ -595,6 +595,7 @@ gtk_base_c_sources = 		\
 	$(a11y_c_sources)	\
 	$(deprecated_c_sources)	\
 	$(inspector_c_sources)	\
+	ddefiledialog.c		\
 	gtkactionmuxer.c	\
 	gtkactionobserver.c	\
 	gtkactionobservable.c	\
--- gtk+3.0-3.22.17.orig/gtk/gtkfilechooser.h
+++ gtk+3.0-3.22.17/gtk/gtkfilechooser.h
@@ -117,206 +117,269 @@ GQuark gtk_file_chooser_error_quark (voi
 
 /* Configuration
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void                 gtk_file_chooser_set_action          (GtkFileChooser       *chooser,
 							   GtkFileChooserAction  action);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GtkFileChooserAction gtk_file_chooser_get_action          (GtkFileChooser       *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void                 gtk_file_chooser_set_local_only      (GtkFileChooser       *chooser,
 							   gboolean              local_only);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean             gtk_file_chooser_get_local_only      (GtkFileChooser       *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void                 gtk_file_chooser_set_select_multiple (GtkFileChooser       *chooser,
 							   gboolean              select_multiple);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean             gtk_file_chooser_get_select_multiple (GtkFileChooser       *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void                 gtk_file_chooser_set_show_hidden     (GtkFileChooser       *chooser,
 							   gboolean              show_hidden);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean             gtk_file_chooser_get_show_hidden     (GtkFileChooser       *chooser);
 
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void                 gtk_file_chooser_set_do_overwrite_confirmation (GtkFileChooser *chooser,
 								     gboolean        do_overwrite_confirmation);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean             gtk_file_chooser_get_do_overwrite_confirmation (GtkFileChooser *chooser);
 
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void                 gtk_file_chooser_set_create_folders  (GtkFileChooser       *chooser,
 							  gboolean               create_folders);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean             gtk_file_chooser_get_create_folders (GtkFileChooser *chooser);
 
 /* Suggested name for the Save-type actions
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void        gtk_file_chooser_set_current_name  (GtkFileChooser *chooser,
 					        const gchar    *name);
+__attribute__((weak))
 GDK_AVAILABLE_IN_3_10
 gchar *gtk_file_chooser_get_current_name (GtkFileChooser *chooser);
 
 /* Filename manipulation
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gchar *  gtk_file_chooser_get_filename       (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_set_filename       (GtkFileChooser *chooser,
 					      const char     *filename);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_select_filename    (GtkFileChooser *chooser,
 					      const char     *filename);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void     gtk_file_chooser_unselect_filename  (GtkFileChooser *chooser,
 					      const char     *filename);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void     gtk_file_chooser_select_all         (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void     gtk_file_chooser_unselect_all       (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GSList * gtk_file_chooser_get_filenames      (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_set_current_folder (GtkFileChooser *chooser,
 					      const gchar    *filename);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gchar *  gtk_file_chooser_get_current_folder (GtkFileChooser *chooser);
 
 
 /* URI manipulation
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gchar *  gtk_file_chooser_get_uri                (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_set_uri                (GtkFileChooser *chooser,
 						  const char     *uri);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_select_uri             (GtkFileChooser *chooser,
 						  const char     *uri);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void     gtk_file_chooser_unselect_uri           (GtkFileChooser *chooser,
 						  const char     *uri);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GSList * gtk_file_chooser_get_uris               (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_set_current_folder_uri (GtkFileChooser *chooser,
 						  const gchar    *uri);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gchar *  gtk_file_chooser_get_current_folder_uri (GtkFileChooser *chooser);
 
 /* GFile manipulation */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GFile *  gtk_file_chooser_get_file                (GtkFileChooser  *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_set_file                (GtkFileChooser  *chooser,
                                                    GFile           *file,
                                                    GError         **error);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_select_file             (GtkFileChooser  *chooser,
                                                    GFile           *file,
                                                    GError         **error);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void     gtk_file_chooser_unselect_file           (GtkFileChooser  *chooser,
                                                    GFile           *file);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GSList * gtk_file_chooser_get_files               (GtkFileChooser  *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_set_current_folder_file (GtkFileChooser  *chooser,
                                                    GFile           *file,
                                                    GError         **error);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GFile *  gtk_file_chooser_get_current_folder_file (GtkFileChooser  *chooser);
 
 /* Preview widget
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void       gtk_file_chooser_set_preview_widget        (GtkFileChooser *chooser,
 						       GtkWidget      *preview_widget);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GtkWidget *gtk_file_chooser_get_preview_widget        (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void       gtk_file_chooser_set_preview_widget_active (GtkFileChooser *chooser,
 						       gboolean        active);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean   gtk_file_chooser_get_preview_widget_active (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void       gtk_file_chooser_set_use_preview_label     (GtkFileChooser *chooser,
 						       gboolean        use_label);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean   gtk_file_chooser_get_use_preview_label     (GtkFileChooser *chooser);
 
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 char  *gtk_file_chooser_get_preview_filename (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 char  *gtk_file_chooser_get_preview_uri      (GtkFileChooser *chooser);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GFile *gtk_file_chooser_get_preview_file     (GtkFileChooser *chooser);
 
 /* Extra widget
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void       gtk_file_chooser_set_extra_widget (GtkFileChooser *chooser,
 					      GtkWidget      *extra_widget);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GtkWidget *gtk_file_chooser_get_extra_widget (GtkFileChooser *chooser);
 
 /* List of user selectable filters
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void    gtk_file_chooser_add_filter    (GtkFileChooser *chooser,
 					GtkFileFilter  *filter);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void    gtk_file_chooser_remove_filter (GtkFileChooser *chooser,
 					GtkFileFilter  *filter);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GSList *gtk_file_chooser_list_filters  (GtkFileChooser *chooser);
 
 /* Current filter
  */
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 void           gtk_file_chooser_set_filter (GtkFileChooser *chooser,
 					   GtkFileFilter  *filter);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GtkFileFilter *gtk_file_chooser_get_filter (GtkFileChooser *chooser);
 
 /* Per-application shortcut folders */
 
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_add_shortcut_folder    (GtkFileChooser *chooser,
 						  const char     *folder,
 						  GError        **error);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_remove_shortcut_folder (GtkFileChooser *chooser,
 						  const char     *folder,
 						  GError        **error);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GSList *gtk_file_chooser_list_shortcut_folders   (GtkFileChooser *chooser);
 
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_add_shortcut_folder_uri    (GtkFileChooser *chooser,
 						      const char     *uri,
 						      GError        **error);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 gboolean gtk_file_chooser_remove_shortcut_folder_uri (GtkFileChooser *chooser,
 						      const char     *uri,
 						      GError        **error);
+__attribute__((weak))
 GDK_AVAILABLE_IN_ALL
 GSList *gtk_file_chooser_list_shortcut_folder_uris   (GtkFileChooser *chooser);
 
+__attribute__((weak))
 GDK_AVAILABLE_IN_3_22
 void        gtk_file_chooser_add_choice              (GtkFileChooser  *chooser,
                                                       const char      *id,
                                                       const char      *label,
                                                       const char     **options,
                                                       const char     **option_labels);
+__attribute__((weak))
 GDK_AVAILABLE_IN_3_22
 void        gtk_file_chooser_remove_choice           (GtkFileChooser  *chooser,
                                                       const char      *id);
+__attribute__((weak))
 GDK_AVAILABLE_IN_3_22
 void        gtk_file_chooser_set_choice              (GtkFileChooser  *chooser,
                                                       const char      *id,
                                                       const char      *option);
+__attribute__((weak))
 GDK_AVAILABLE_IN_3_22
 const char *gtk_file_chooser_get_choice              (GtkFileChooser  *chooser,
                                                       const char      *id);
--- gtk+3.0-3.22.17.orig/gtk/gtkfilechooserdialog.c
+++ gtk+3.0-3.22.17/gtk/gtkfilechooserdialog.c
@@ -283,6 +283,10 @@ gtk_file_chooser_dialog_class_init (GtkF
   gtk_widget_class_bind_template_callback (widget_class, file_chooser_widget_selection_changed);
 }
 
+__attribute__((weak))
+GDK_AVAILABLE_IN_ALL
+void _d_ddefiledialog_override_gtk_dialog(GtkWidget *);
+
 static void
 gtk_file_chooser_dialog_init (GtkFileChooserDialog *dialog)
 {
@@ -294,6 +298,9 @@ gtk_file_chooser_dialog_init (GtkFileCho
 
   _gtk_file_chooser_set_delegate (GTK_FILE_CHOOSER (dialog),
                                   GTK_FILE_CHOOSER (dialog->priv->widget));
+
+  if (_d_ddefiledialog_override_gtk_dialog)
+    _d_ddefiledialog_override_gtk_dialog(dialog);
 }
 
 static GtkWidget *
--- gtk+3.0-3.22.17.orig/testsuite/Makefile.am
+++ gtk+3.0-3.22.17/testsuite/Makefile.am
@@ -1,6 +1,6 @@
 include $(top_srcdir)/Makefile.decl
 
-SUBDIRS = gdk gtk a11y css reftests tools
+SUBDIRS = gdk a11y css tools
 
 -include $(top_srcdir)/git.mk
